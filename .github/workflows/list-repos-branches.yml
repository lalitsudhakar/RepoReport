name: List All Repos & Mark Stale Branches

on:
  workflow_dispatch:

jobs:
  list_repos_mark_stale:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Fetch Repositories, Branches & Last Build Dates
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}  # Ensure this secret is set
          ORG_NAME: "lalitsudhakar"  # Change to your GitHub username or organization
        run: |
          echo "Repo Name,Branch Name,Last Build Date,Status" > repo_list.csv
          page=1
          THIRTY_DAYS_AGO=$(date -d "30 days ago" --utc +%s)

          while true; do
            response=$(curl -s -H "Authorization: token $GH_TOKEN" \
                              -H "Accept: application/vnd.github.v3+json" \
                              "https://api.github.com/users/$ORG_NAME/repos?per_page=100&page=$page")

            if [[ -z "$response" ]] || echo "$response" | jq -e 'has("message")' > /dev/null; then
              echo "❌ Error fetching repositories. Response: $response"
              exit 1
            fi

            repos=$(echo "$response" | jq -r '.[].name')

            if [[ -z "$repos" ]]; then
              break
            fi

            for repo in $repos; do
              echo "🔍 Processing repository: $repo"

              branches=$(curl -s -H "Authorization: token $GH_TOKEN" \
                                -H "Accept: application/vnd.github.v3+json" \
                                "https://api.github.com/repos/$ORG_NAME/$repo/branches" | jq -r '.[].name')

              for branch in $branches; do
                echo "  🔹 Processing branch: $branch"

                last_build=$(curl -s -H "Authorization: token $GH_TOKEN" \
                                      -H "Accept: application/vnd.github.v3+json" \
                                      "https://api.github.com/repos/$ORG_NAME/$repo/actions/runs?branch=$branch&per_page=1" \
                                      | jq -r '.workflow_runs[0].updated_at')

                if [[ "$last_build" == "null" ]] || [[ -z "$last_build" ]]; then
                  last_build="No Builds"
                  status="Stale"
                else
                  last_build_timestamp=$(date -d "$last_build" --utc +%s)
                  if [[ $last_build_timestamp -lt $THIRTY_DAYS_AGO ]]; then
                    status="Stale"
                  else
                    status="Active"
                  fi
                fi

                echo "$repo,$branch,$last_build,$status" >> repo_list.csv
              done
            done

            ((page++))
          done

          echo "✅ Report generated: repo_list.csv"

      - name: Upload CSV Report
        uses: actions/upload-artifact@v4
        with:
          name: repo_branch_list_report
          path: repo_list.csv
